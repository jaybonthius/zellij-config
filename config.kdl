keybinds clear-defaults=true {
    unbind "Ctrl h"
    unbind "Ctrl t"
    unbind "Ctrl n"
    unbind "Ctrl s"
    normal {
        bind "Ctrl l" { SwitchToMode "locked"; }
        bind "Ctrl b" { SwitchToMode "tmux"; }
    }
    locked {
        bind "Ctrl l" { SwitchToMode "normal"; }
    }
    session {
        bind "a" {
            LaunchOrFocusPlugin "zellij:about" {
                floating true
                move_to_focused_tab true
            }
            SwitchToMode "normal"
        }
        bind "c" {
            LaunchOrFocusPlugin "configuration" {
                floating true
                move_to_focused_tab true
            }
            SwitchToMode "normal"
        }
        bind "Ctrl o" { SwitchToMode "normal"; }
        bind "p" {
            LaunchOrFocusPlugin "plugin-manager" {
                floating true
                move_to_focused_tab true
            }
            SwitchToMode "normal"
        }
        bind "w" {
            LaunchOrFocusPlugin "session-manager" {
                floating true
                move_to_focused_tab true
            }
            SwitchToMode "normal"
        }
    }
    tmux {
        bind "Esc" { SwitchToMode "normal"; }
        bind "p" { SwitchToMode "pane"; }
        bind "t" { SwitchToMode "tab"; }
        bind "o" { SwitchToMode "session"; }
        bind "q" { Quit; }
        bind "d" { Detach; }
        // what does this do?
        bind "Ctrl f" { Write 2; SwitchToMode "normal"; }
    }
    shared_among "tmux" "pane" "tab" {
        bind "enter" { SwitchToMode "normal"; }
        bind "esc" { SwitchToMode "normal"; }

        // pane
        bind "h" { MoveFocus "left"; }
        bind "j" { MoveFocus "down"; }
        bind "k" { MoveFocus "up"; }
        bind "l" { MoveFocus "right"; }

        // new pane (only down and right available)
        bind "Ctrl h" { NewPane "right"; SwitchToMode "normal"; }
        bind "Ctrl j" { NewPane "down"; SwitchToMode "normal"; }

        // fullscreen pane
        bind "f" { ToggleFocusFullscreen; SwitchToMode "normal"; }

        // tab
        bind "tab" { ToggleTab; }
        bind "u" { GoToPreviousTab; }
        bind "i" { GoToNextTab; }
        bind "1" { GoToTab 1; SwitchToMode "normal"; }
        bind "2" { GoToTab 2; SwitchToMode "normal"; }
        bind "3" { GoToTab 3; SwitchToMode "normal"; }
        bind "4" { GoToTab 4; SwitchToMode "normal"; }
        bind "5" { GoToTab 5; SwitchToMode "normal"; }
        bind "6" { GoToTab 6; SwitchToMode "normal"; }
        bind "7" { GoToTab 7; SwitchToMode "normal"; }
        bind "8" { GoToTab 8; SwitchToMode "normal"; }
        bind "9" { GoToTab 9; SwitchToMode "normal"; }
    }
    pane {
        bind "n" { NewPane; SwitchToMode "normal"; }
        bind "x" { CloseFocus; SwitchToMode "normal"; }
        bind "e" { TogglePaneEmbedOrFloating; SwitchToMode "normal"; }
        bind "w" { ToggleFloatingPanes; SwitchToMode "normal"; }
        bind "z" { TogglePaneFrames; SwitchToMode "normal"; }
        // bind "i" { TogglePanePinned; SwitchToMode "normal"; }
    }
    tab {
        bind "n" { NewTab; SwitchToMode "normal"; }
        bind "x" { CloseTab; SwitchToMode "normal"; }
        // idk if i will use these, but keeping because not documented online
        // bind "b" { BreakPane; SwitchToMode "normal"; }
        // bind "[" { BreakPaneLeft; SwitchToMode "normal"; }
        // bind "]" { BreakPaneRight; SwitchToMode "normal"; }
    }
}

plugins {
    about location="zellij:about"
    compact-bar location="zellij:compact-bar"
    configuration location="zellij:configuration"
    filepicker location="zellij:strider" {
        cwd "/"
    }
    plugin-manager location="zellij:plugin-manager"
    session-manager location="zellij:session-manager"
    status-bar location="zellij:status-bar"
    strider location="zellij:strider"
    tab-bar location="zellij:tab-bar"
    welcome-screen location="zellij:session-manager" {
        welcome_screen true
    }
}


load_plugins {
}
theme "everforest-dark-medium"
default_mode "normal"
show_startup_tips false
default_shell "fish"
 